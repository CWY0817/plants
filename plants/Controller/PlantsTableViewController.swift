//
//  PlantsTableViewController.swift
//  plants
//
//  Created by viplab on 2018/8/6.
//  Copyright ¬© 2018Âπ¥ viplab. All rights reserved.
//

import UIKit

class PlantsTableViewController: UITableViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationController?.navigationBar.prefersLargeTitles = true
        navigationController?.navigationBar.setBackgroundImage(UIImage(), for: .default )
        navigationController?.navigationBar.shadowImage = UIImage()
        if let customFont = UIFont(name:"Rubik-Medium",size:40.0){
            navigationController?.navigationBar.largeTitleTextAttributes = [ NSAttributedStringKey.foregroundColor : UIColor(red: 231.0/255.0 , green : 76.0/255.0 , blue: 60.0/255.0 , alpha: 1.0),NSAttributedStringKey.font: customFont ]
        }
    }
    
    override func viewWillAppear(_ animated: Bool){
        super.viewWillAppear(animated)
        navigationController?.hidesBarsOnSwipe = true
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    
    // MARK: - Ê§çÁâ©classÈô£Âàó
    var plants:[Plants]=[
        Plants(name:"ÂçóÂ§©Á´π", type:"ËëâÁÇ∫‰∏âÂõûÁæΩÁãÄË§áËëâ" , location:"ÂúñÊõ∏ÁÆ°Ââç",isee: false),
        Plants(name:"Êµ∑Ê°ê", type:"ËëâÁ∞áÁîüÊûùÁ´Ø,ÂëàÂÄíÂçµÂΩ¢" , location:"ÁÆ°Èô¢Ê≠•ÈÅìÊóÅ",isee: false),
        Plants(name:"Áü≥Ê†ó", type:"ËëâËÑàÊòéÈ°Ø,ÊúâÊòéÈ°ØÊòüÁãÄÊØõ" ,location:"È¶ôÊ•†Ê≠•ÈÅìÊóÅ",isee: false),
        Plants(name:"‰∫îÊéåÊ•†", type:"ËëâËº™Áîü,Èõ¢Âü∫‰∏âÂá∫ËÑà" , location:"Ë°åÊîøÂ§ßÊ®ìÊóÅ",isee: false),
        Plants(name:"Ê•ìÈ¶ô", type:"ËëâÂ§öÁÇ∫‰∏âË£Ç" , location:"Ë°åÊîøÂ§ßÊ®ìÊóÅ", isee: false),
        Plants(name:"ÈªÉËä±È¢®Èà¥Êú®", type:"ÊéåÁãÄË§áËëâ,ËëâÂΩ¢Áï•ÂëàÂÄíÂçµÂΩ¢" , location:"ÁßëÈô¢Ââç‰∏ªÁí∞ÈÅìÂÖßËçâÁöÆ" , isee: false),
        Plants(name:"ÁÉèÁöÆ‰πùËäé", type:"ËëâËÑàÊúâÊØõ" , location:"Ê©üËªäÈÅìË≠¶Ë°õÂÆ§ÊóÅ" , isee: false),
        Plants(name:"ËäíÊûú", type:"ÂúìÈåêËä±Â∫è,ËëâËÑàÊòéÈ°Ø" , location:"ÁÆ°Èô¢ÊóÅ" , isee: false),
        Plants(name:"ÈêµÂÜ¨Èùí", type:"Ëä±Ê¢óÁÑ°ÊØõ,ËëâÂÖâÊªë" , location:"ÁßëÈô¢Â§ñÁí∞ÈÅì" , isee: false),
        Plants(name:"È¢®Èà¥Êú®", type:"ÊéåÁãÄË§áËëâ,ÊúâÈã∏ÈΩíÁ∑£" , location:"Êö®Â§ß7-11Âæå" , isee: false),
        Plants(name:"ÈªÉÈµ™Ëèú", type:"Ê†πÁîüËëâ,ÁæΩÁãÄÊ∑±Ë£Ç" , location:"‰∫∫ÊñáÂ≠∏Èô¢" ,  isee: false),
        Plants(name:"Ê±üÊüê", type:"ÂπºÊ®π‰∏äÁöÑÂ∞èËëâÊúÉ‰∏çË¶èÂâáË£Ç‰∏îÁÇ∫ÊéåÁãÄË§áËëâ" , location:"Ê©üËªäÈÅì" , isee: false),
        Plants(name:"Âè∞ÁÅ£Ëµ§Ê•†", type:"ËëâÂ∞çÁîü,ËëâËÉåÁ¥ãË∑ØÁ¥∞Á∑ªÊòéÈ°Ø" , location:"Êö®Â§ß7-11Ââç" , isee: false),
        Plants(name:"Ê°ÇËä±", type:"ËëâÂÖ®Á∑£ÊàñÁ¥∞Èã∏ÈΩí" , location:"Êö®Â§ß7-11ÊóÅ" , isee: false),
        Plants(name:"Â•ßÊ∞èËôéÁöÆÊ•†", type:"ËéñÁõ¥Á´ãÊàñÊñú‰∏ä" , location:"Ë°åÊîøÂ§ßÊ®ìÂÅúËªäÂ†¥ÊóÅËçâÂú∞" ,  isee: false),
        Plants(name:"Ê¨ñ‰ªÅÊ®π", type:"Ëä±ÈõÑËïäÂçÅÊûö,ÂÖßÂ§ñÂÖ©ÂúàÂêÑ‰∫îÊûö" , location:"Á∂úÂêàÂ§ßÊ®ìÂÅúËªäÂ†¥ÊóÅ", isee: false),
        Plants(name:"Âè∞ÁÅ£Êµ∑Ê°ê", type:"ËëâÊêìÊèâÊúÉÊúâÁâπÊÆäÈ¶ôÂë≥" , location:"Áßë‰∏ÄÂÅúËªäÂ†¥" , isee: false),
        Plants(name:"‰πùËäé", type:"ÂÖâÊªëÁöÑÊ®πÂππ" , location:"Ê©üËªäÈÅì" , isee: false)
    ]

    
    // MARK: - Table view data source

    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return plants.count
    }

    //MARK: - Âª∫Á´ãCell
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cellidentifier = "Cell"
        let cell = tableView.dequeueReusableCell(withIdentifier: cellidentifier, for: indexPath)as! PlantsTableViewCell

        cell.nameLabel.text = plants[indexPath.row].name
        cell.locationLabel.text = "‰ΩçÁΩÆ: " + plants[indexPath.row].location
        cell.typeLabel.text = "ÁâπÂæµ: " + plants[indexPath.row].type
        cell.plantsimage.image = UIImage(named: plants[indexPath.row].name)
        cell.heartIcon.isHidden = plants[indexPath.row].isee ? false : true

        return cell
    }

    //MARK: - ÂêëÂ∑¶ÊªëÂãï
    override func tableView(_ tableView: UITableView, trailingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration?{
        
        //Âà™Èô§
        let deleteAction = UIContextualAction(style:.destructive,title: "Delete"){(action,sourceView,completionHandler) in
            
            self.plants.remove(at: indexPath.row)
            
            self.tableView.deleteRows(at: [indexPath], with: .fade)
            
            completionHandler(true)
        }
        deleteAction.backgroundColor = UIColor(red:231.0/255.0,green:76.0/255.0,blue:60.0/255.0,alpha:1.0)
        deleteAction.image = UIImage(named: "delete")
        
        //ÂàÜ‰∫´
        let shareAction = UIContextualAction(style:.normal,title:"Share"){(action,sourceView,completionHandler) in
            
            let sharetext = "ÂéªÁúãÁúãÈÄôÊ§çÁâ©Âêßüå≥"
            
            let activityController : UIActivityViewController
            if let shareimage = UIImage(named: self.plants[indexPath.row].name){
                activityController = UIActivityViewController(activityItems: [shareimage,sharetext], applicationActivities: nil)
            }
            else{
                activityController = UIActivityViewController(activityItems: [sharetext], applicationActivities: nil)
            }
            
            if let popoverController = activityController.popoverPresentationController{
                if let cell = tableView.cellForRow(at: indexPath){
                    popoverController.sourceView = cell
                    popoverController.sourceRect = cell.bounds
                }
            }
            
            self.present(activityController,animated: true,completion: nil)
            completionHandler(true)
        }
        shareAction.backgroundColor = UIColor(red:254.0/255.0,green:149.0/255.0,blue:38.0/255.0,alpha:1.0)
        shareAction.image = UIImage(named: "share")
        
        //check
        let title2 = plants[indexPath.row].isee ? "Undo Check" : "Check"
        let booling2 = plants[indexPath.row].isee ? false : true
        
        let checkAction2 = UIContextualAction(style:.normal,title:title2){(action,sourceView,completionHandler) in
            let cell = tableView.cellForRow(at: indexPath)as!PlantsTableViewCell
            cell.heartIcon.isHidden = booling2 ? false : true
            self.plants[indexPath.row].isee = booling2
            completionHandler(true)
        }
        let img = booling2 ? "tick" : "undo"
        checkAction2.image = UIImage(named: img)
        
        
        let Swipe = UISwipeActionsConfiguration(actions: [deleteAction,shareAction,checkAction2])
        
        return Swipe
        
    }
    
    // MARK: - ÂÇ≥ÈÅûË≥áÊñôÁµ¶Âè¶‰∏ÄÂÄãË¶ñÂúñ
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "showplantsdetail"{
            if let indexPath = tableView.indexPathForSelectedRow{
                let destination = segue.destination as!PlantsDetailViewController
                destination.plants = plants[indexPath.row]
            }
        }
        
    }


}
